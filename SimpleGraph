import java.util.*;

public class SimpleGraph {
    private int V;
    private List<List<Integer>> adjList;

    public SimpleGraph(int V) {
        this.V = V;
        adjList = new ArrayList<>(V);
        for (int i = 0; i < V; ++i)
            adjList.add(new ArrayList<>());
    }

    public void addEdge(int u, int v) {
        adjList.get(u).add(v);
        adjList.get(v).add(u);
    }

    public int greedyColoring() {
        int[] result = new int[V];
        Arrays.fill(result, -1);
        result[0] = 0;

        boolean[] available = new boolean[V];
        Arrays.fill(available, true);

        for (int u = 1; u < V; u++) {
            for (int i : adjList.get(u)) {
                if (result[i] != -1) {
                    available[result[i]] = false;
                }
            }

            int cr;
            for (cr = 0; cr < V; cr++) {
                if (available[cr]) break;
            }

            result[u] = cr;
            Arrays.fill(available, true);
        }

        int maxColor = 0;
        for (int i = 0; i < V; i++) {
            if (result[i] > maxColor) {
                maxColor = result[i];
            }
        }

        return maxColor + 1;
    }

    public static void main(String[] args) {
        int V = 5;
        SimpleGraph graph = new SimpleGraph(V);
        
        graph.addEdge(0, 1);
        graph.addEdge(0, 2);
        graph.addEdge(1, 2);
        graph.addEdge(1, 3);
        graph.addEdge(2, 3);
        graph.addEdge(3, 4);
        
        System.out.println("Minimalna liczba chromatyczna: " + graph.greedyColoring());
    }
}
